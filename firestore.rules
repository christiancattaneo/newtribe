rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isReactionUpdate() {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions', 'updatedAt']);
    }

    function isParticipant(participants) {
      return request.auth.uid in participants;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow update: if isOwner(userId) 
        && request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['displayName', 'photoURL', 'bio', 'updatedAt']);
      allow delete: if isOwner(userId);
      allow create: if isOwner(userId)
        && request.resource.data.keys()
            .hasOnly(['displayName', 'email', 'photoURL', 'createdAt', 'updatedAt', 'bio', 'role']);
    }

    match /channels/{channelId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;

      match /messages/{messageId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn() && (
          resource.data.userId == request.auth.uid || 
          isReactionUpdate()
        );
        allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
      }
    }

    match /directMessages/{dmId} {
      allow read: if isSignedIn() 
        && request.auth.uid in resource.data.participants;
      allow create: if isSignedIn() && isParticipant(request.resource.data.participants);
      allow update: if isSignedIn() && isParticipant(resource.data.participants);
      allow delete: if isSignedIn() && request.auth.uid in resource.data.participants;
    }

    match /messages/{messageId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        resource.data.userId == request.auth.uid || 
        isReactionUpdate()
      );
      allow delete: if isSignedIn() && (
        resource.data.userId == request.auth.uid || 
        (resource.data.directMessageId != null && 
         exists(/databases/$(database)/documents/directMessages/$(resource.data.directMessageId)) &&
         request.auth.uid in get(/databases/$(database)/documents/directMessages/$(resource.data.directMessageId)).data.participants)
      );
    }
  }
}